# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xnD67-f0p_N6uKbwoDEBML_ty_hQAaj5
"""

# Install nashpy if not installed
!pip install nashpy

import nashpy as nash
import numpy as np

# Define action set (demands)
actions = [0, 25, 50, 75, 100]
n = len(actions)

# Initialize payoff matrices
A = np.zeros((n, n))  # Player 1 payoff
B = np.zeros((n, n))  # Player 2 payoff

# Fill payoff matrices
for i, x1 in enumerate(actions):
    for j, x2 in enumerate(actions):
        if x1 + x2 <= 100:
            A[i, j] = x1
            B[i, j] = x2
        else:
            A[i, j] = 0
            B[i, j] = 0

# Create the game
game = nash.Game(A, B)

print("Payoff matrix for Player 1:\n", A)
print("\nPayoff matrix for Player 2:\n", B)

# Compute equilibria
equilibria = list(game.support_enumeration())
print("\nNash equilibria (strategy profiles):")
for eq in equilibria:
    print(eq)